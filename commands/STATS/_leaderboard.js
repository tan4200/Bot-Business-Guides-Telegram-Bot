/*CMD
  command: /leaderboard
  help: 
  need_reply: false
  auto_retry_time: 
  folder: STATS

  <<ANSWER

  ANSWER

  <<KEYBOARD

  KEYBOARD
  aliases: 
  group: 
CMD*/

if (!quizLeaderboard || quizLeaderboard.length === 0) {
  const emptyText = {
    en: "<b>The leaderboard is empty.</b>\nTake some quizzes to enter the top 10!",
    ru: "<b>–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤ –ø—É—Å—Ç–∞.</b>\n–ü—Ä–æ–π–¥–∏—Ç–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø-10!"
  }[systemLang];

  Api.sendMessage({
    text: emptyText,
    parse_mode: "html"
  });
  return;
}

let leaderboardTextHeader = {
  en: "<b>üèÜ Quiz Leaderboard </b>\n\n",
  ru: "<b>üèÜ –¢–∞–±–ª–∏—Ü–∞ –õ–∏–¥–µ—Ä–æ–≤ –í–∏–∫—Ç–æ—Ä–∏–Ω—ã </b>\n\n"
}[systemLang];

let leaderboardBody = "";

quizLeaderboard.forEach((entry, index) => {
  const tgLink = `<a href="tg://openmessage?user_id=${entry.user_tg_id}">Ranker</a>`;
  const positionEmoji = ["ü•á", "ü•à", "ü•â"][index] || `${index + 1}.`;

  const line = {
    en: `${positionEmoji} ${tgLink} ‚Äî <b>${entry.score}</b> points\n`,
    ru: `${positionEmoji} ${tgLink} ‚Äî <b>${entry.score}</b> –æ—á–∫–æ–≤\n`
  }[systemLang];

  leaderboardBody += line;
});

const leaderboardFooter = {
  en: "\nWant to be on top? Take more quizzes and improve your score!",
  ru: "\n–•–æ—Ç–∏—Ç–µ –ø–æ–ø–∞—Å—Ç—å –≤ —Ç–æ–ø? –†–µ—à–∞–π—Ç–µ –±–æ–ª—å—à–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω –∏ —É–ª—É—á—à–∞–π—Ç–µ —Å–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"
}[systemLang];

Api.sendMessage({
  text: leaderboardTextHeader + leaderboardBody + leaderboardFooter,
  parse_mode: "html",
  disable_web_page_preview: true
});
